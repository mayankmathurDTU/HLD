// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class Player{
    string name;
    int position;
    public : 
    Player(string n):name(n),position(0){
        //this->name = name; this->position = 0;
    }
    string getName(){return name;}
    int getPosition(){return position;}
    void setPosition(int pos){position = pos;}
};
class Dice{
    int count;
    public: 
    Dice(int num=1):count(num){srand(time(0));}
    int rollDice(){
        int step=0;
        for(int i=1 ; i<=count ; i++){
            step += rand()%6+1;
        }
        return step;
    }
};
class Jump{
    int start,end;
    Jump(int a,int b):start(a), end(b){}
};
class Board{
    int size;
    map<int,int> snakeLadder;
    public: 
    Board(int s):size(s){};
    int getSize(){return size;}
    void addSnake(int s, int e){
        //cout<<"s "<<s<<" "<<e<<endl;
        snakeLadder[s]=e;
        //cout<<"s "<<s<<" "<<snakeLadder[s]<<endl;
    }
    void addLadder(int s, int e){
        //cout<<"l "<<s<<" "<<e<<endl;
        snakeLadder[s]=e;
        //cout<<"l "<<s<<" "<<snakeLadder[s]<<endl;
    }
    int getNextPosition(int pos){
        //cout<<"current pos is "<<pos <<endl;
        //cout<<snakeLadder[pos]<<endl;
        
        if(snakeLadder.find(pos) != snakeLadder.end()){
            //cout<<"hi"<<endl;
            if(pos > snakeLadder[pos])cout<<"Congo! Stairs"<<endl;
            else cout<<"Sorry! Snake"<<endl;
            return snakeLadder[pos];
        }
        return pos;
    }
};
class Game{
    Board board;
    vector<Player> players;
    Dice dice;
    public: 
    Game(int size, int numDice):board(size),dice(numDice){}
    void addPlayer(string name){
        Player newPlayer(name);
        players.push_back(newPlayer);
    }
    Board& getBoard(){return board;}
    void start(){
        bool isWinner = false;
        while(isWinner == false){
            for(int i=0 ; i<players.size() ; i++){
                int diceRoll = dice.rollDice();
                cout<<players[i].getName()<<" got "<<diceRoll<<endl;
               int curPos = players[i].getPosition() + diceRoll;
                if(curPos > board.getSize())continue;
                curPos = board.getNextPosition(curPos);
                players[i].setPosition(curPos);
                if(curPos==board.getSize()){
                  cout<<players[i].getName()<<" has won"<<endl;
                  isWinner=true;
                  break;
                }
            }
        }
    }
};
int main() {
    Game g(100,1);
    g.addPlayer("Mayank");
    g.addPlayer("Garima");
    //Board& b = g.getBoard().;
    g.getBoard().addLadder(1,5);
    g.getBoard().addLadder(2,5);
    g.getBoard().addLadder(3,5);
    g.getBoard().addLadder(4,7);
    g.getBoard().addLadder(5,8);
    g.getBoard().addLadder(6,8);
    g.getBoard().addSnake(80,6);
    g.getBoard().addSnake(75,60);
    g.getBoard().addSnake(45,30);
    g.getBoard().addSnake(40,20);
    g.start();
    return 0;
}
